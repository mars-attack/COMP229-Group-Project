{"version":3,"sources":["fs (ignored)","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","crypto (ignored)","stream (ignored)","./src/app/partials/header/header.component.ts","./src/app/partials/header/header.component.html","./src/app/survey-library/take-survey/take-survey.component.ts","./src/app/survey-library/take-survey/take-survey.component.html","./src/environments/environment.ts","./src/app/partials/footer/footer.component.ts","./src/app/partials/footer/footer.component.html","./src/app/interfaces.ts","./src/app/model/model.module.ts","./src/app/model/rest.datasouce.ts","./src/app/survey-library/questions/questions.component.ts","./src/app/survey-library/questions/questions.component.html","./src/app/survey-library/survey-management/survey-management.component.ts","./src/app/survey-library/survey-management/survey-management.component.html","./src/app/survey-library/survey-list/survey-list.component.ts","./src/app/survey-library/survey-list/survey-list.component.html","./src/app/survey-library/question-form/question-form.component.ts","./src/app/survey-library/question-form/question-form.component.html","./src/app/survey-library/edit-survey/edit-survey.component.ts","./src/app/survey-library/edit-survey/edit-survey.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/model/user.model.ts","./src/app/app.module.ts","./src/app/model/auth.service.ts","./src/app/survey-library/display-results/display-results.component.ts","./src/app/survey-library/display-results/display-results.component.html","./src/app/survey-library/survey-library.module.ts","./src/app/survey-library/counter.directive.ts","./src/app/model/survey.repository.ts","./src/app/app-routing.module.ts","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n\r\n","<!-- Home/Landing Page -->\r\n\r\n<div id=\"background\">\r\n  <!-- Welcome Message -->\r\n  <div id=\"welcome_div_wrap\">\r\n    <!-- Text and button section -->\r\n    <div id=\"text_div_wrap\">\r\n      <div id=\"text_div\">\r\n        <p id=\"text_top\" class=\"text-left\">\r\n          Survey with 3C,<br>learn without distance !\r\n        </p>\r\n\r\n        <div id=\"text_subtitle_wrap\">\r\n          <p class=\"text-left\">\r\n            <span id=\"text_subtitle\">\r\n              <br>As a survey creator<br>\r\n            </span>\r\n            <span id=\"text_content\">\r\n              (1) Register / login your account<br>\r\n              (2) Create a survey template<br>\r\n              (3) Share the page link to survey takers\r\n            </span>\r\n          </p>\r\n        </div>\r\n\r\n        <a id=\"heroBtn\" routerLink=\"/surveys\" class=\"btn btn-primary justify-content-center\" id=\"heroBtn\">\r\n          Create Survey\r\n        </a>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Pucture section -->\r\n    <div id=\"pic_div\">\r\n      <img src=\"assets/images/main_pic.png\" id=\"main_img\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"background2\">\r\n  <!-- Active Surveys -->\r\n  <app-survey-list></app-survey-list>\r\n</div>\r\n","/* (ignored) */","/* (ignored) */","import { AuthService } from 'src/app/model/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/model/user.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  user: User;\r\n\r\n  constructor(private authService: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void\r\n  {\r\n    this.user = new User();\r\n  }\r\n\r\n  onLogoutClick(): void\r\n  {\r\n    this.authService.logout().subscribe(data => {\r\n      this.router.navigate(['/login']);\r\n    });\r\n  }\r\n\r\n  isLoggedIn(): boolean\r\n  {\r\n    const result = this.authService.authenticated;\r\n    if (result)\r\n    {\r\n      this.user = JSON.parse(localStorage.getItem('user'));\r\n    }\r\n    return result;\r\n  }\r\n\r\n}\r\n","<!-- Main Navigation -->\r\n<div id=\"background\">\r\n  <nav id=\"nav_wrapper\" class=\"navbar navbar-expand-lg navbar-dark\">\r\n\r\n    <!-- Logo and site name -->\r\n    <a class=\"navbar-brand\" href=\"/home\">\r\n      <img id=\"logo\" src=\"assets/images/cup.png\" alt=\"logo\">\r\n      3C SURVEYS\r\n    </a>\r\n\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <!-- Survey buttons -->\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n\r\n        <!-- <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/surveys\">\r\n            Create Survey\r\n          </a>\r\n        </li> -->\r\n\r\n\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Register and Login -- Note: routerLinks may need to be altered-->\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n\r\n\r\n        <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n          <a class=\"nav-link\" routerLink=\"/home\"><i class=\"fas fa-lg fa-laptop-house\"></i> Home </a>\r\n        </li>\r\n\r\n\r\n        <!--Inpage hash tag link-->\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['home']\" pageScroll href=\"#active_surveys\" [pageScrollDuration]=\"200\"\r\n            [pageScrollSpeed]=\"200\" fragment=\"active-surveys\"><i class=\"fas fa-lg fa-tasks\"></i>\r\n            See Active Surveys\r\n          </a>\r\n        </li>\r\n\r\n        <!--check statistics link to survey management when not logged in -->\r\n        <li *ngIf='!isLoggedIn()' class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/surveys\"><i class=\"fas fa-lg fa-check-square\"></i>\r\n            Check Statistics\r\n          </a>\r\n        </li>\r\n\r\n\r\n        <!-- CREATE SURVEYS -->\r\n        <li *ngIf='isLoggedIn()' class=\"nav-item\" [routerLinkActive]=\"['active']\">\r\n          <a class=\"nav-link\" routerLink=\"/surveys\"><i class=\"fas fa-poll fa-lg\"></i> Manage Surveys </a>\r\n        </li>\r\n\r\n        <!-- LOGIN/LOGOUT -->\r\n\r\n        <!-- Admin menu -->\r\n\r\n        <li *ngIf='isLoggedIn()' class=\"nav-item dropdown ml-5\" class=\"dropdown\">\r\n          <a class=\"nav-link text-warning dropdown-toggle\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-lg fa-user-shield\"></i>\r\n            {{ user.displayName }} </a>\r\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <a class=\"dropdown-item\" routerLink=\"/update\">Update account</a>\r\n            <!-- log out-->\r\n            <a (click)='onLogoutClick()' routerLink='/logout' class=\"dropdown-item\" routerLink=\"/login\">\r\n              <i class=\"fas fa-sign-out-alt\"></i> Sign out </a>\r\n          </div>\r\n        </li>\r\n\r\n        <li *ngIf='!isLoggedIn()' class=\"nav-item\" [routerLinkActive]=\"['active']\"\r\n          [routerLinkActiveOptions]=\"{exact: true}\">\r\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\" routerLink=\"/register\"><i\r\n              class=\"fas fa-lg fa-file-signature\"></i>\r\n            Register\r\n          </a>\r\n        </li>\r\n\r\n\r\n        <!-- Login -->\r\n        <li *ngIf='!isLoggedIn()' class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/login\" class=\"btn btn-primary justify-content-center\" id=\"heroBtn\"><i\r\n              class=\"fas fa-sign-in-alt\"></i> Login </a>\r\n        </li>\r\n\r\n      </ul>\r\n    </div>\r\n\r\n  </nav>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Survey } from 'src/app/model/survey.model';\r\nimport { SurveyRepository } from 'src/app/model/survey.repository';\r\nimport { Question, Option } from '../../interfaces';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Component({\r\n  selector: 'app-take-survey',\r\n  templateUrl: './take-survey.component.html',\r\n  styleUrls: ['./take-survey.component.css']\r\n})\r\n\r\nexport class TakeSurveyComponent implements OnInit, AfterViewInit {\r\n  // survey: Survey;\r\n  // TODO: include overlay in html\r\n  showCannotTakeOverlay: boolean;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private surveyRepository: SurveyRepository,\r\n    public router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // const id = this.route.snapshot.params.id;\r\n    // this.survey = this.surveyRepository.getSurvey(id);\r\n\r\n    if (this.survey) {\r\n      this.survey.questions.forEach(question => {\r\n        question.chosenOptions = ['test'];\r\n      });\r\n    }\r\n  }\r\n\r\n  get survey(): Survey {\r\n    const id = this.route.snapshot.params.id;\r\n    return this.surveyRepository.getSurvey(id);\r\n  }\r\n\r\n  // reroute if survey is inactive\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => {\r\n      if (this.survey && !this.surveyRepository.isActive(this.survey)){\r\n        // this.router.navigateByUrl('/');\r\n        this.showCannotTakeOverlay = true;\r\n      }\r\n    }, 250);\r\n  }\r\n\r\n  onCancelSubmit(event: Event): void {\r\n    event.preventDefault();\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'Your answers will not be saved.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, I\\'m sure',\r\n      cancelButtonText: 'No, keep working'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.router.navigateByUrl('/');\r\n      }\r\n    });\r\n  }\r\n\r\n  onConfirmSubmit(event: Event): void {\r\n    event.preventDefault();\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'You will not be able change your answers.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, submit!',\r\n      cancelButtonText: 'No, keep working'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.surveySave();\r\n        Swal.fire({\r\n          title: 'Submitted!',\r\n          text: 'Thank you for completing this survey :)',\r\n          icon: 'success'\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  surveySave(): void {\r\n    this.survey.responses++;\r\n\r\n    // checking the selected option and updating the options count\r\n    for (let index = 0; index <=  this.survey.questions.length - 1; index++)\r\n    {\r\n      const question = this.survey.questions[index];\r\n      const options = this.survey.questions[index].options;\r\n      const chosenOptions = this.survey.questions[index].chosenOptions;\r\n\r\n      for (let j = 0; j <= options.length - 1; j++)\r\n      {\r\n        for (let m = 0; m <= chosenOptions.length - 1; m++)\r\n        {\r\n          if (question.chosenOptions[m] === question.options[j]._id)\r\n          {\r\n            question.options[j].count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      question.chosenOptions = undefined; // reset chosen option\r\n    }\r\n\r\n    this.surveyRepository.takeSurvey(this.survey).subscribe(data => {\r\n      const error = data.error;\r\n\r\n      if (error) {\r\n        Swal.fire({\r\n          title: 'Oh no! :(',\r\n          text: 'Something bad happened, please try again',\r\n          icon: 'error'\r\n        });\r\n      } else {\r\n        this.router.navigateByUrl('/');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  onSelectOption(question: Question, optionId: string): void {\r\n\r\n    // initializing array\r\n    if (!question.chosenOptions) {\r\n      question.chosenOptions = [];\r\n    }\r\n\r\n    if (question.optionType === 'radio')  {\r\n      question.chosenOptions[0] = optionId;\r\n    } else if (question.optionType === 'checkbox') {\r\n      if (!question.chosenOptions.includes(optionId)) // if first selection\r\n      {\r\n        question.chosenOptions.push(optionId); // remove\r\n      } else {\r\n        question.chosenOptions.splice(question.chosenOptions.indexOf(optionId), 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkIfSelected(question: Question, optionId: string): boolean {\r\n    if (question && question.chosenOptions && optionId) {\r\n      const condition = question.chosenOptions.indexOf(optionId) > -1; // checks if the option is in the array\r\n      return condition;\r\n    }\r\n  }\r\n}\r\n","<!--TakeSurvey Comoponent-->\r\n<div class=\"container\">\r\n  <h1>{{survey?.name}}</h1>\r\n  <form>\r\n    <!--Populating the page with questions-->\r\n    <div class=\"card bg-light shoddow rounded m-3\"\r\n      *ngFor=\"let question of survey?.questions; let questionIndex= index;\">\r\n      <h5 class=\"card-header\">Q{{questionIndex + 1}}. {{question.title}}</h5>\r\n\r\n      <!--Populating the page with options-->\r\n\r\n      <fieldset class=\"card-body pt-1 pb-1\" *ngFor=\"let option of question.options; let optionIndex= index;\">\r\n        <!--Templete for radio button question-->\r\n        <div class=\"pl-3\" *ngIf=\"question.optionType === 'radio'\">\r\n          <input type=\"radio\" id=\"{{'question' + questionIndex +'option' + questionIndex}}\" class=\"form-check-input\"\r\n            name=\"{{'question' + questionIndex}}\" value=\"{{option._id}}\"\r\n            [checked]=\"checkIfSelected(question, option._id)\" (change)=\"onSelectOption(question, option._id)\" />\r\n          <label class=\"form-check-label\" for=\"materialUnchecked\">{{option.details}}</label>\r\n        </div>\r\n        <!--Templete for checkbox question-->\r\n        <div class=\"pl-3\" *ngIf=\"question.optionType === 'checkbox'\">\r\n          <input type=\"checkbox\" id=\"{{'question' + questionIndex +'option' + questionIndex}}\" class=\"form-check-input\"\r\n            name=\"{{'question' + questionIndex}}\" value=\"{{option._id}}\"\r\n            [checked]=\"checkIfSelected(question, option._id)\" (change)=\"onSelectOption(question, option._id)\" />\r\n          <label class=\"form-check-label\" for=\"materialUnchecked\">{{option.details}}</label>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n\r\n    <button class=\"btn btn-success btn-sm m-1 p-2\" (click)=\"onConfirmSubmit($event)\">\r\n      SUBMIT\r\n    </button>\r\n    <button class=\"btn btn-warning btn-sm m-1 p-2\" (click)=\"onCancelSubmit($event)\">\r\n      CANCEL\r\n    </button>\r\n\r\n  </form>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Footer -->\r\n    <footer class=\"page-footer font-small blue pt-4\">\r\n\r\n      <div id=\"footer_wrap\">\r\n        <!-- Footer table -->\r\n        <div class=\"container-fluid\">\r\n\r\n            <!-- Grid row starts-->\r\n            <div class=\"row\">\r\n\r\n                <!-- Grid column (Logo)-->\r\n                <div class=\"col-md-2 mt-md-0 mt-2 \">\r\n                    <img id=\"logo\" src=\"\\assets\\images\\team_logo.png\">\r\n                </div>\r\n\r\n                <!-- Grid column (Team name)-->\r\n                <div class=\"col-md-10 mt-md-0 mt-10 \">\r\n                    <div class=\"container-fluid \">\r\n\r\n                        <!-- Grid row1 starts-->\r\n                        <div id=\"id\">\r\n                            <h6><br>COFFEE CRUNCH CODE</h6>\r\n                        </div>\r\n\r\n                        <!-- Grid row2 starts-->\r\n                        <div class=\"row\">\r\n\r\n                            <!-- Grid column (Shota)-->\r\n                            <div class=\"col-md-3 mb-md-0 mb-3\">\r\n                                <a><b>Shota Ito</b></a>\r\n                                <ul class=\"list-unstyled\">\r\n                                  <li>\r\n                                    <a>SN:301103095</a>\r\n                                  </li>\r\n                                  <li>\r\n                                    <a>Project Manager</a>\r\n                                  </li>\r\n                                  <li>\r\n                                    <a>Generalist Programmer</a>\r\n                                  </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <!-- Grid column (Freya)-->\r\n                            <div class=\"col-md-3 mb-md-0 mb-3\">\r\n                              <!-- Links -->\r\n                              <a><b>XuTung Jin</b></a>\r\n                              <ul class=\"list-unstyled\">\r\n\r\n                                <li>\r\n                                  <a>SN:301111889</a>\r\n                                </li>\r\n                                <li>\r\n                                  <a>Web Designer</a>\r\n                                </li>\r\n                                <li>\r\n                                  <a>UI Programmer</a>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n\r\n                            <!-- Grid column (Seol)-->\r\n                            <div class=\"col-md-3 mb-md-0 mb-3\">\r\n\r\n                              <a><b>Seol Cheon</b></a>\r\n                              <ul class=\"list-unstyled\">\r\n\r\n                                <li>\r\n                                  <a>SN:301113120</a>\r\n                                </li>\r\n                                <li>\r\n                                  <a>Security Programmer</a>\r\n                                </li>\r\n                                <li>\r\n                                  <a>Database Programmer</a>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n\r\n                            <!-- Grid column (Marianne)-->\r\n                            <div class=\"col-md-3 mb-md-0 mb-3\">\r\n                              <!-- Links -->\r\n\r\n                              <a><b>Marianne Palmer</b></a>\r\n                              <ul class=\"list-unstyled\">\r\n\r\n                                <li>\r\n                                  <a>SN:301122149</a>\r\n                                </li>\r\n                                <li>\r\n                                  <a>Lead Software Engineer</a>\r\n                                </li>\r\n                              </ul>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- Grid row ends-->\r\n        </div>\r\n      </div>\r\n    </footer>\r\n","export interface Question {\r\n  _id?: string;\r\n  title: string;\r\n  optionType: OptionType;\r\n  options: Option[];\r\n  chosenOptions?: string[];\r\n}\r\n\r\nexport interface Option {\r\n  _id?: string;\r\n  details: string;\r\n  count?: number;\r\n}\r\n\r\nexport enum OptionType {\r\n  CHECKBOX = 'checkbox',\r\n  RADIO = 'radio'\r\n}\r\n","import { AuthService } from './auth.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { SurveyRepository } from './survey.repository';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RestDataSource } from './rest.datasouce';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    SurveyRepository,\r\n    RestDataSource,\r\n    AuthService\r\n  ]\r\n})\r\nexport class ModelModule\r\n{\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Survey } from './survey.model';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from './user.model';\r\n\r\nconst PROTOCOL = 'http';\r\nconst  PORT = 3000;\r\n\r\nexport interface IResponse {\r\n  error: string | undefined | null;\r\n  data: any;\r\n}\r\n\r\n@Injectable()\r\nexport class RestDataSource\r\n{\r\n  user: User;\r\n  baseUrl: string;\r\n  authToken: string;\r\n\r\n  private httpOptions =\r\n  {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept'\r\n    })\r\n  };\r\n\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n              private jwtService: JwtHelperService)\r\n  {\r\n    this.user = new User();\r\n    // this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/api/`;\r\n    this.baseUrl = `https://comp229-group-project-3c.herokuapp.com/api/`;\r\n  }\r\n\r\n  getSurveys(): Observable<IResponse>\r\n  {\r\n    return this.http.get<IResponse>(this.baseUrl + 'surveys');\r\n  }\r\n\r\n  getSurvey(id: string): Observable<IResponse>\r\n  {\r\n    return this.http.get<IResponse>(this.baseUrl + `surveys/${id}`);\r\n  }\r\n\r\n  addSurvey(survey: Survey): Observable<IResponse>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<IResponse>(this.baseUrl + 'surveys/add', survey, this.httpOptions);\r\n  }\r\n\r\n  deleteSurvey(data: any): Observable<IResponse>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<IResponse>(this.baseUrl + `surveys/delete`, data, this.httpOptions);\r\n  }\r\n\r\n  updateSurvey(data: any): Observable<IResponse>\r\n  {\r\n    this.loadToken();\r\n    return this.http.post<IResponse>(this.baseUrl + `surveys/update/${data.survey._id}`, data, this.httpOptions);\r\n  }\r\n\r\n  takeSurvey(survey: Survey): Observable<IResponse>\r\n  {\r\n    return this.http.post<IResponse>(this.baseUrl + `surveys/take/${survey._id}`, survey);\r\n  }\r\n\r\n  // Authentication Section\r\n\r\n  authenticate(user: User): Observable<any>\r\n  {\r\n    return this.http.post<any>(this.baseUrl + 'login', user, this.httpOptions);\r\n  }\r\n\r\n  storeUserData(token: any, user: User): void\r\n  {\r\n    // * 'bearer ' not needed for deploy on heroku\r\n    // localStorage.setItem('id_token', 'Bearer ' + token);\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  logout(): Observable<any>\r\n  {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n\r\n    return this.http.get<any>(this.baseUrl + 'logout', this.httpOptions);\r\n  }\r\n\r\n  loggedIn(): boolean\r\n  {\r\n    return !this.jwtService.isTokenExpired(this.authToken);\r\n  }\r\n\r\n  registerUser(user: User): Observable<any> {\r\n    return this.http.post<any>( this.baseUrl + 'register', user, this.httpOptions);\r\n  }\r\n\r\n  updateUser(user: User): Observable<any> {\r\n    this.loadToken();\r\n    return this.http.post<any>( this.baseUrl + 'update', user, this.httpOptions);\r\n  }\r\n\r\n  // updates the headers with the bearer token\r\n  private loadToken(): void\r\n  {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', this.authToken);\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Question } from 'src/app/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './questions.component.html',\r\n  styleUrls: ['./questions.component.css']\r\n})\r\n\r\nexport class QuestionsComponent implements OnInit {\r\n  constructor() { }\r\n  @Input() questions;\r\n  @Output() edit = new EventEmitter();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onEdit(question: Question): void {\r\n    this.edit.emit(question);\r\n  }\r\n\r\n  onDelete(question: Question): void {\r\n    const index = this.questions.indexOf(question);\r\n    this.questions.splice(index, 1);\r\n  }\r\n\r\n}\r\n","<!-- Questions Component-->\r\n<table class=\"table\">\r\n  <thead class=\"col-9\">\r\n    <tr>\r\n      <th scope=\"col\" style=\"width:70%\">QUESTION</th>\r\n      <th scope=\"col\">EDIT</th>\r\n      <th scope=\"col\">DELETE</th>\r\n    </tr>\r\n  </thead>\r\n\r\n  <tbody>\r\n    <tr *ngFor=\"let question of questions\">\r\n      <td>\r\n        <div>\r\n          {{ question.title }}\r\n        </div>\r\n        <div>\r\n          {{ question.optionType }}\r\n        </div>\r\n        <div *ngFor=\"let option of question.options\" class=\"ml-5\">\r\n          <li>{{ option.details }}</li>\r\n        </div>\r\n      </td>\r\n      <td>\r\n        <button (click)=\"onEdit(question)\" class=\"btn btn-success btn-sm\">\r\n          EDIT\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button (click)=\"onDelete(question)\" class=\"btn btn-danger btn-sm\">\r\n          DELETE\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { Survey } from 'src/app/model/survey.model';\r\nimport { SurveyRepository } from 'src/app/model/survey.repository';\r\nimport { User } from 'src/app/model/user.model';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Component({\r\n  selector: 'app-survey-management',\r\n  templateUrl: './survey-management.component.html',\r\n  styleUrls: ['./survey-management.component.css']\r\n})\r\nexport class SurveyManagementComponent implements OnInit, AfterViewInit {\r\n  public newSurvey: Survey;\r\n  user: User;\r\n\r\n  constructor(private repository: SurveyRepository) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeNewSurvey();\r\n    this.repository.initializeSurveys();\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  get surveys(): Survey[]\r\n  {\r\n    // display only surveys made by current user\r\n    return this.repository.getSurveys().filter((survey) => survey.user === this.user.id);\r\n  }\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n\r\n  onCreateSurvey(): void {\r\n    this.newSurvey.user = this.user.id;\r\n    this.repository.addSurvey(this.newSurvey);\r\n    this.initializeNewSurvey();\r\n    Swal.fire({\r\n      title: 'Survey Created',\r\n      text: 'Select your survey to add questions',\r\n      icon: 'success'\r\n    });\r\n  }\r\n\r\n  onDeleteSurvey(survey: Survey): void {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'You will not be able recover this survey.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete forever',\r\n      cancelButtonText: 'No, I change my mind'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.repository.deleteSurvey(survey, this.user.id);\r\n        Swal.fire({\r\n          title: 'Survey deleted',\r\n          icon: 'success'\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeNewSurvey(): void {\r\n    this.newSurvey = {\r\n      name: ''\r\n    };\r\n  }\r\n\r\n}\r\n","<!--SurveyManagement Comoponent-->\r\n<div class=\"container mt-4\" id=\"surveyContainer\">\r\n  <h1 class=\"text-center\">Survey Management</h1>\r\n  <!-- Section for creating a new survey -->\r\n  <div class=\"container bg-light p-4 mt-4 rounded shadow\">\r\n    <h4>Create a survey</h4>\r\n    <div class=\"form-group\">\r\n      <div class=\"row\">\r\n        <input class=\"form-control col-10\" placeholder=\"Enter survery name\" name=\"survey-name\" id=\"create_input\"\r\n          [(ngModel)]=\"newSurvey.name\">\r\n        <button [disabled]=\"!newSurvey.name\" (click)=\"onCreateSurvey()\" class=\"btn btn-success btn-sm ml-2\"\r\n          id=\"create_btn\">\r\n          CREATE\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Table displaying all surveys-->\r\n  <div class=\"mt-5\" id=\"table_wrap\">\r\n    <h4>My Surveys</h4>\r\n    <table class=\"table shadow\">\r\n      <thead class=\"col-9\">\r\n        <tr>\r\n          <th scope=\"col\">Survey Name</th>\r\n          <th scope=\"col\">Active</th>\r\n          <th scope=\"col\">Expires</th>\r\n          <th scope=\"col\">Edit</th>\r\n          <th scope=\"col\">Delete</th>\r\n          <th scope=\"col\">Results</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr *ngFor=\"let survey of surveys\">\r\n          <td> {{ survey.name }}</td>\r\n          <td>{{ survey.dateActive | date: 'MMM d, y, h:mm a' }}</td>\r\n          <td>{{ survey.dateExpire | date: 'MMM d, y, h:mm a' }}</td>\r\n          <td id=\"edit-td\">\r\n            <button routerLink=\"/surveys/edit/{{survey._id}}\" class=\"btn btn-sm\" id=\"edit_button\">\r\n              Edit\r\n            </button>\r\n          </td>\r\n          <td id=\"del-td\">\r\n            <button (click)=\"onDeleteSurvey(survey)\" class=\"btn btn-danger btn-sm\">\r\n              Delete\r\n            </button>\r\n          </td>\r\n          <td id=\"view-td\">\r\n            <button routerLink=\"/surveys/results/{{survey._id}}\" class=\"btn btn-info btn-sm\">\r\n              View Results\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Survey } from '../../model/survey.model';\r\nimport { SurveyRepository } from '../../model/survey.repository';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-survey-list',\r\n  templateUrl: './survey-list.component.html',\r\n  styleUrls: ['./survey-list.component.css']\r\n})\r\nexport class SurveyListComponent implements OnInit {\r\n\r\n  public surveysPerPage = 4;\r\n  public selectedPage = 1;\r\n\r\n\r\n  constructor(private repository: SurveyRepository) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // returns active surveys\r\n  get surveys(): Survey[]\r\n  {\r\n    // for pagination\r\n    const pageIndex = (this.selectedPage - 1) * this.surveysPerPage;\r\n\r\n    // sort by by closing date\r\n    const surveysTOReturn = this.repository.getActiveSurveys().sort((a, b) =>\r\n      ((new Date(b.dateExpire)).getTime() < (new Date (a.dateExpire)).getTime()) ? 1 : -1\r\n    );\r\n\r\n    return surveysTOReturn.slice(pageIndex, pageIndex + this.surveysPerPage);\r\n  }\r\n\r\n  changePage(newPage: number): void\r\n  {\r\n    this.selectedPage = newPage;\r\n  }\r\n\r\n  changePageSize(newSize: number): void\r\n  {\r\n    this.surveysPerPage = Number(newSize);\r\n    this.changePage(1);\r\n  }\r\n\r\n  get pageCount(): number\r\n  {\r\n    return Math.ceil(this.repository\r\n      .getActiveSurveys().length / this.surveysPerPage);\r\n  }\r\n}\r\n","<!--SurveyList Comoponent-->\r\n<!-- Table for active surveys with example data-->\r\n\r\n<!-- Note:Can't use flash-messages here becase welcome messgae blcok need to be at the top-->\r\n<div id=\"active_wrap\">\r\n  <span id=\"divider\">&nbsp;<br></span>\r\n  <span id=\"active_surveys\">Active Surveys</span>\r\n\r\n  <div id=\"table_wrap\">\r\n    <table class=\"shadow\">\r\n      <colgroup>\r\n        <col id=\"column-1\">\r\n        <col id=\"column-2\">\r\n        <col id=\"column-3\">\r\n        <col id=\"column-4\">\r\n        <col id=\"column-5\">\r\n        <col id=\"column-6\">\r\n      </colgroup>\r\n\r\n      <!--Title line-->\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Created By</th>\r\n          <th>Survey Name</th>\r\n          <th>Closing Date</th>\r\n          <th>Responses</th>\r\n          <th>Take Survey</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        <tr *ngFor=\"let survey of surveys; let i = index\">\r\n          <td scope=\"row\">{{ i + 1 }}</td>\r\n          <td id=\"displayName\">{{ survey.displayName }}</td>\r\n          <td id=\"name\">{{ survey.name }}</td>\r\n          <!--Change once set deactive date-->\r\n          <td>{{ survey.dateExpire | date: 'MMM d, y, h:mm a' }}</td>\r\n          <td>{{ survey.responses }}</td>\r\n          <td>\r\n            <button routerLink=\"/surveys/take/{{survey._id}}\" class=\"btn btn-sm\" id=\"take_survey_button\">\r\n              Take Survey\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <br>&nbsp;\r\n\r\n    <div id=\"page_opt\" class=\"form-inline float-left mr-1\">\r\n      <select class=\"form-control\" [value]='surveysPerPage' (change)=\"changePageSize($event.target.value)\">\r\n        <option value=\"4\">4 per page</option>\r\n        <option value=\"6\">6 per page</option>\r\n        <option value=\"8\">8 per page</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"float-right\" id=\"not_selected\">\r\n      <button class=\"btn selected-page\" *counter=\"let page of pageCount\" (click)=\"changePage(page)\"\r\n        [class.active]=\"page===selectedPage\">\r\n        {{ page }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { Question, OptionType } from 'src/app/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-question-form',\r\n  templateUrl: './question-form.component.html',\r\n  styleUrls: ['./question-form.component.css']\r\n})\r\nexport class QuestionFormComponent implements OnInit, OnChanges {\r\n  @Input() question: Question;\r\n  @Output() save = new EventEmitter();\r\n  public placeholderQuestion: Question;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.initializePlaceholderQuestion();\r\n  }\r\n\r\n  // lifecycle hook: executes whenever one of our input prperties have changed\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.question) {\r\n      this.placeholderQuestion = this.question;\r\n    }\r\n  }\r\n\r\n  onAddOption(): void {\r\n    this.placeholderQuestion.options.push({\r\n      details: ''\r\n    });\r\n  }\r\n\r\n  onDelete(index: number): void {\r\n    if (this.placeholderQuestion.options.length > 1)\r\n    {\r\n      this.placeholderQuestion.options.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  // save edits to questions\r\n  onSave(): void {\r\n    // to reset the parent's selectedQuestion (to edit)\r\n    this.save.emit(this.placeholderQuestion);\r\n    // reset form input\r\n    this.initializePlaceholderQuestion();\r\n  }\r\n\r\n  initializePlaceholderQuestion(): void {\r\n    this.placeholderQuestion = {\r\n      title: '',\r\n      optionType: OptionType.RADIO,\r\n      options: [{\r\n        details: ''\r\n      }]\r\n    };\r\n  }\r\n}\r\n","<!-- QuestionForm Component -->\r\n<div class=\"bg=light rounded p-3 shadow\">\r\n  <form>\r\n    <h4>{{question ? 'Update Question' : 'Add Question'}}</h4>\r\n\r\n    <div class=\"form-group\">\r\n      <label>Question Title</label>\r\n      <input class=\"form-control\" placeholder=\"Enter question title\" name=\"title\"\r\n        [(ngModel)]=\"placeholderQuestion.title\">\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label>Type</label>\r\n      <select name=\"optionType\" [(ngModel)]=\"placeholderQuestion.optionType\">\r\n        <option value=\"checkbox\">Checkbox</option>\r\n        <option value=\"radio\">Radio</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Looping to display options in form-->\r\n    <div *ngFor=\"let option of placeholderQuestion.options; let i = index;\" class=\"form-group\">\r\n      <label>Option Description</label>\r\n      <div class=\"d-flex flex-row\">\r\n        <!--icon for deleting otptions-->\r\n        <i id=\"delete-option-button\" class=\"fas fa-minus-circle p-1\" (click)=\"onDelete(i)\"\r\n          *ngIf=\"placeholderQuestion.options.length > 1\"></i>\r\n        <!--Options input-->\r\n        <input class=\"form-control\" placeholder=\"Enter option description\" name=\"details + {{i}}\"\r\n          [(ngModel)]=\"option.details\">\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row ml-0\">\r\n      <button [disabled]=\"!placeholderQuestion.title\" (click)=\"onAddOption()\" class=\"btn btn-info btn-sm m-1\">\r\n        <i class=\"fas fa-plus-circle\"></i> ADD OPTION\r\n      </button>\r\n\r\n      <div>\r\n        <button [disabled]=\"!placeholderQuestion.title\" (click)=\"onSave()\" class=\"btn btn-success btn-sm m-1\">\r\n          {{question ? 'SAVE' : 'ADD QUESTION'}}\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Question } from 'src/app/interfaces';\r\nimport { Survey } from 'src/app/model/survey.model';\r\nimport { SurveyRepository } from 'src/app/model/survey.repository';\r\nimport { User } from 'src/app/model/user.model';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Component({\r\n  selector: 'app-edit-survey',\r\n  templateUrl: './edit-survey.component.html',\r\n  styleUrls: ['./edit-survey.component.css']\r\n})\r\nexport class EditSurveyComponent implements OnInit, AfterViewInit{\r\n  public selectedQuestion: Question;\r\n  private user: User;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private surveyRepository: SurveyRepository,\r\n    private flashMessage: FlashMessagesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // reroute user if not his own survey\r\n    if (this.user.id !== this.survey.user) {\r\n      this.router.navigateByUrl('/error');\r\n    }\r\n  }\r\n\r\n  get survey(): Survey {\r\n    const id = this.route.snapshot.params.id;\r\n    return this.surveyRepository.getSurvey(id);\r\n  }\r\n\r\n  onQuestionEdit(question: Question): void {\r\n    this.selectedQuestion = question;\r\n  }\r\n\r\n  onQuestionSave(question: Question): void {\r\n    // check if edit or add\r\n    if (this.selectedQuestion) {\r\n      this.selectedQuestion = question;\r\n    } else {\r\n      this.survey.questions.push(question);\r\n    }\r\n    this.selectedQuestion = undefined;\r\n  }\r\n\r\n  onCancelEdit(event: Event): void {\r\n\r\n    event.preventDefault();\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'You changes will not be saved.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, discard changes',\r\n      cancelButtonText: 'No, keep working'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.router.navigateByUrl('/surveys');\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onSurveySave(): void {\r\n    if (this.validateDates() && this.validateQuestions()) {\r\n      // if dates and number of questions are valid\r\n      this.surveyRepository.updateSurvey(this.survey, this.user.id).subscribe(data => {\r\n        const error = data.error;\r\n        if (error) {\r\n          this.flashMessage.show('Update failed, please try again.', {cssClass: 'alert-danger', timeOut: 6000});\r\n        } else {\r\n          this.surveyRepository.initializeSurveys();\r\n          this.flashMessage.show('Survey updated', {cssClass: 'alert-success', timeOut: 6000});\r\n          this.router.navigateByUrl('/surveys');\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  validateDates(): boolean {\r\n    const activeDate = new Date(this.survey.dateActive).getTime();\r\n    const expireDate = new Date(this.survey.dateExpire).getTime();\r\n    const currentDate = (new Date(Date.now())).getTime() - 60000; // adjust by one minute to allow user to select current time;\r\n\r\n    let errorMessage;\r\n\r\n    if (activeDate < currentDate) {\r\n      errorMessage = 'Error: Active date cannot be earlier than current date';\r\n    }\r\n\r\n    if (expireDate < activeDate) {\r\n      errorMessage = 'Error: Expiry date cannot be before date active.';\r\n    }\r\n\r\n    if (errorMessage) {\r\n      this.flashMessage.show(errorMessage, {cssClass: 'alert-danger', timeOut: 6000});\r\n    }\r\n\r\n    return errorMessage ? false : true;\r\n  }\r\n\r\n  validateQuestions(): boolean {\r\n    if (this.survey.questions.length < 1) {\r\n      this.flashMessage.show('Error: Survey must have at least one question', {cssClass: 'alert-danger', timeOut: 6000});\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","<!--EditSurvey Component-->\r\n<div class=\"container\" id=\"editSurveyContainer\">\r\n  <h1 class=\"display-4 mt-5 mb-5 pl-5\" id=\"editTitle\">Edit Survey</h1>\r\n  <div class=\"container mb-5 row\">\r\n\r\n    <!-- Question form conponent -->\r\n    <div class=\"col-lg-4 col-s-12\">\r\n      <app-question-form (save)=\"onQuestionSave($event)\" [question]=\"selectedQuestion\"></app-question-form>\r\n    </div>\r\n\r\n    <div class=\"col-lg-8 col-sm-12\">\r\n\r\n      <div class=\"row mb-2\">\r\n        <!-- Editable survey name -->\r\n        <h4>\r\n          <span class=\"ml-3 mr-3\" contenteditable=\"true\" [textContent]=\"survey?.name\"\r\n            (input)=\"survey.name=$event.target.textContent\" id=\"surveyName\"></span>\r\n          <i class=\"fas fa-pencil-alt\"></i>\r\n        </h4>\r\n      </div>\r\n\r\n      <div class=\"row mb-2\">\r\n        <!-- Feilds for date active and expire -->\r\n        <div class=\"col-md-6 col-sm-12 p-0\">\r\n          <label class=\"h4 pr-2\" for=\"dateActive\">Active: </label>\r\n          <input type=\"datetime-local\" id=\"dateActive\" name=\"dateActive\" [(ngModel)]=\"survey.dateActive\">\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-12 p-0\">\r\n          <label class=\"h4 pr-2\" for=\"dateExpire\">Expires: </label>\r\n          <input type=\"datetime-local\" id=\"dateExpire\" name=\"dateExpire\" [(ngModel)]=\"survey.dateExpire\">\r\n        </div>\r\n      </div>\r\n\r\n      <app-questions [questions]=\"survey?.questions\" (edit)=\"onQuestionEdit($event)\"></app-questions>\r\n\r\n\r\n      <div class=\"mt-4 d-flex justify-content-center\">\r\n        <button (click)=\"onSurveySave()\" class=\"btn btn-primary btn-sm m-1 p-2\">\r\n          <i class=\"far fa-lg fa-save\"></i> SAVE SURVEY\r\n        </button>\r\n        <button (click)=\"onCancelEdit($event)\" class=\"btn btn-secondary btn-sm m-1 p-2\">\r\n          <i class=\"fas fa-undo\"></i> CANCEL\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  pageTitle: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private titleService: Title) {}\r\n\r\n   ngOnInit(): void {\r\n     // Setting the document title\r\n    this.router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd),\r\n    )\r\n    .subscribe(() => {\r\n\r\n      const rt = this.getChild(this.activatedRoute);\r\n\r\n      rt.data.subscribe(data => {\r\n        this.pageTitle = data.title;\r\n        this.titleService.setTitle(data.title);\r\n      });\r\n    });\r\n  }\r\n\r\n  getChild(activatedRoute: ActivatedRoute): ActivatedRoute {\r\n    if (activatedRoute.firstChild) {\r\n      return this.getChild(activatedRoute.firstChild);\r\n    } else {\r\n      return activatedRoute;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"page-wrapper\">\r\n\r\n  <div class=\"sticky-header\">\r\n    <app-header></app-header>\r\n  </div>\r\n\r\n  <div class=\"content-wrapper\">\r\n\r\n    <div class=\"content\">\r\n      <div id=\"flashMessages\">\r\n        <flash-messages></flash-messages>\r\n      </div>\r\n\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n\r\n    <div *ngIf=\"!(pageTitle === 'Register' || pageTitle ==='Login' || this.pageTitle === 'Update Account')\"\r\n      class=\"footer\">\r\n      <app-footer></app-footer>\r\n    </div>\r\n\r\n    <!-- fixed footer for pages that are short when screen size is large -->\r\n    <div *ngIf=\"pageTitle === 'Register' || pageTitle === 'Login' || this.pageTitle === 'Update Account'\"\r\n      class=\"footer fixed-footer\">\r\n      <app-footer></app-footer>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { AuthService } from '../model/auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard\r\n{\r\n  path: ActivatedRouteSnapshot[];\r\n  route: ActivatedRouteSnapshot;\r\n\r\n  constructor(private router: Router,\r\n              private auth: AuthService){ }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean\r\n  {\r\n    if (this.auth.authenticated)\r\n    {\r\n      // console.log('authenticated');\r\n      return true;\r\n    }\r\n    else\r\n    {\r\n      // console.log('cannnot authenticate');\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","export class User\r\n{\r\n  id: string;\r\n  username: string;\r\n  password: string;\r\n  email: string;\r\n  displayName: string;\r\n  newPassword: string; // for changing password. property not in backend\r\n}\r\n","import { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './partials/header/header.component';\r\nimport { FooterComponent } from './partials/footer/footer.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { ErrorComponent } from './pages/error/error.component';\r\nimport { SurveyLibraryModule } from './survey-library/survey-library.module';\r\nimport { JwtModule, JwtHelperService, JwtInterceptor } from '@auth0/angular-jwt';\r\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\r\nimport { FlashMessagesModule, FlashMessagesService } from 'angular2-flash-messages';\r\n\r\nexport function jwtTokenGetter(): string\r\n{\r\n  return localStorage.getItem('id_token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    ErrorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SurveyLibraryModule,\r\n    FlashMessagesModule.forRoot(),\r\n    NgxPageScrollModule,\r\n\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: jwtTokenGetter\r\n      }\r\n    })\r\n  ],\r\n  providers: [FlashMessagesService, Title],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { User } from './user.model';\r\nimport { RestDataSource } from './rest.datasouce';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthService\r\n{\r\n  user: User;\r\n\r\n  constructor(private datasource: RestDataSource)\r\n  {\r\n    this.user =  new User();\r\n  }\r\n\r\n  authenticate(user: User): Observable<any>\r\n  {\r\n    return this.datasource.authenticate(user);\r\n  }\r\n\r\n  storeUserDate(token: any, user: User): void\r\n  {\r\n    this.datasource.storeUserData(token, user);\r\n  }\r\n\r\n  get authenticated(): boolean\r\n  {\r\n    return this.datasource.loggedIn();\r\n  }\r\n\r\n  logout(): Observable<any>\r\n  {\r\n    return this.datasource.logout();\r\n  }\r\n\r\n  registerUser(user: User): Observable<any>\r\n  {\r\n    return this.datasource.registerUser(user);\r\n  }\r\n\r\n  updateUser(user: User): Observable<any>\r\n  {\r\n    return this.datasource.updateUser(user);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Question } from 'src/app/interfaces';\r\nimport { Survey } from 'src/app/model/survey.model';\r\nimport { SurveyRepository } from 'src/app/model/survey.repository';\r\nimport { User } from 'src/app/model/user.model';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport * as XLSX from 'xlsx';\r\n\r\n@Component({\r\n  selector: 'app-display-results',\r\n  templateUrl: './display-results.component.html',\r\n  styleUrls: ['./display-results.component.css']\r\n})\r\nexport class DisplayResultsComponent implements OnInit, AfterViewInit {\r\n\r\n  user: User;\r\n\r\n  // for exporting to excel document\r\n  @ViewChild('TABLE', { static: false }) TABLE: ElementRef;\r\n  title = 'Excel';\r\n  ExportTOExcel(): void {\r\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(this.TABLE.nativeElement);\r\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Survey Results');\r\n    XLSX.writeFile(wb, this.survey.name + '.xlsx');\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private surveyRepository: SurveyRepository,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  get survey(): Survey\r\n  {\r\n    // display only surveys made by current user\r\n    const id = this.route.snapshot.params.id;\r\n    return this.surveyRepository.getSurvey(id);\r\n  }\r\n\r\n  get questions(): Question[]\r\n  {\r\n    return this.survey.questions;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // reroute user if not his own survey\r\n    if (this.user.id !== this.survey.user) {\r\n      this.router.navigateByUrl('/');\r\n    }\r\n  }\r\n\r\n  onConfirmReset(): void {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: 'You will not be able recover these statistics.',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, I\\'m sure',\r\n      cancelButtonText: 'No, keep them'\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        this.resultsReset();\r\n        Swal.fire({\r\n          title: 'Survey results reset!',\r\n          icon: 'success'\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  resultsReset(): void {\r\n    this.survey.responses = 0;\r\n    for (let i = 0; i <= this.questions.length - 1 ; i++)\r\n    {\r\n      const options = this.questions[i].options;\r\n      for (let j = 0; j <= options.length - 1; j ++) {\r\n        options[j].count = 0;\r\n      }\r\n    }\r\n\r\n    this.surveyRepository.updateSurvey(this.survey , this.user.id).subscribe(data => {\r\n      const error = data.error;\r\n      if (error) {\r\n        Swal.fire({\r\n          title: 'Oh no! :(',\r\n          text: 'Something bad happened, please try again',\r\n          icon: 'error'\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--SurveyResults Component-->\r\n<div class=\"container mt-5\" id=\"resultsContainer\">\r\n\r\n  <div class=\"d-flex justify-content-between mb-3\">\r\n    <h2 class=\"pl-3\">Survey: {{survey.name}}</h2>\r\n    <div>\r\n      <button (click)=\"ExportTOExcel()\" class=\"btn btn-success\">Export to Excel</button>\r\n    </div>\r\n  </div>\r\n  <!-- in a table for exporting to excel-->\r\n  <div #TABLE #table>\r\n    <tr>\r\n      <td class=\"pl-3\" colspan=\"2\"><b>Responses: {{survey.responses}}</b></td>\r\n    </tr>\r\n    <div class=\"container shaddow rounded mt-4\" *ngFor=\"let question of questions\">\r\n      <table class=\"table table-striped table-bordered\">\r\n        <tr>\r\n          <td colspan=\"2\">Q: {{ question.title }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th scope=\"col\">Option</th>\r\n          <th scope=\"col\">Count</th>\r\n        </tr>\r\n        <tr *ngFor=\"let option of question.options\">\r\n          <td>{{option.details}}</td>\r\n          <td>{{option.count}}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"text-center\">\r\n    <button class=\"btn btn-primary pl-4 pr-4 m-2\" (click)=\"onConfirmReset()\">\r\n      Reset\r\n    </button>\r\n    <button routerLink='/surveys' class=\"btn btn-secondary pl-4 pr-4 m-2\">\r\n      Return\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ModelModule } from '../model/model.module';\r\nimport { CounterDirective } from './counter.directive';\r\nimport { SurveyListComponent } from './survey-list/survey-list.component';\r\nimport { QuestionsComponent } from './questions/questions.component';\r\nimport { QuestionFormComponent } from './question-form/question-form.component';\r\nimport { EditSurveyComponent } from './edit-survey/edit-survey.component';\r\nimport { SurveyManagementComponent } from './survey-management/survey-management.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TakeSurveyComponent } from './take-survey/take-survey.component';\r\nimport { DisplayResultsComponent } from './display-results/display-results.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    ModelModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    SurveyListComponent,\r\n    CounterDirective,\r\n    QuestionsComponent,\r\n    QuestionFormComponent,\r\n    EditSurveyComponent,\r\n    SurveyManagementComponent,\r\n    TakeSurveyComponent,\r\n    DisplayResultsComponent\r\n  ],\r\n  exports: [\r\n    SurveyListComponent,\r\n    CounterDirective\r\n  ]\r\n})\r\nexport class SurveyLibraryModule {}\r\n","import { Directive, ViewContainerRef, TemplateRef, Input, Attribute, SimpleChanges, OnChanges } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[counterOf]'\r\n})\r\nexport class CounterDirective implements OnChanges\r\n{\r\n  constructor(\r\n    private viewContainer: ViewContainerRef,\r\n    private template: TemplateRef<any>) { }\r\n\r\n  @Input('counterOf') counter: number;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void\r\n  {\r\n    this.viewContainer.clear();\r\n    for (let index = 0; index < this.counter; index++)\r\n    {\r\n      this.viewContainer.createEmbeddedView(this.template, new CounterDirectiveContext(index + 1));\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nclass CounterDirectiveContext\r\n{\r\n  constructor(public $implicit: any) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Survey } from './survey.model';\r\nimport { IResponse, RestDataSource } from './rest.datasouce';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Swal } from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Injectable()\r\nexport class SurveyRepository\r\n{\r\n  private surveys: Survey[] = [];\r\n\r\n  constructor(\r\n    private restDataSource: RestDataSource,\r\n    private flashMessage: FlashMessagesService)\r\n  {\r\n    this.initializeSurveys();\r\n  }\r\n\r\n  getActiveSurveys(): Survey[]\r\n  {\r\n    return this.surveys.filter((survey) => this.isActive(survey));\r\n  }\r\n\r\n  getSurveys(): Survey[]\r\n  {\r\n    return this.surveys;\r\n  }\r\n\r\n  getSurvey(id: string): Survey\r\n  {\r\n    return this.surveys.find(s => id === s._id);\r\n  }\r\n\r\n  addSurvey(survey: Survey): void\r\n  {\r\n    this.restDataSource.addSurvey(survey).subscribe(data => {\r\n      const addedSurvey = data.data as Survey;\r\n      const error = data.error;\r\n\r\n      if (error) {\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'Failed to create survey, please try again.',\r\n          icon: 'error'\r\n        });\r\n         // this.flashMessage.show('Error: failed to create survey, please try again.', {cssClass: 'alert-danger', timeOut: 6000});\r\n      } else if (addedSurvey) {\r\n        this.initializeSurveys(); // reload surveys\r\n        // this.router.navigateByUrl('/surveys/edit/' + addedSurvey._id);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteSurvey(surveyData: Survey, userID: string): void\r\n  {\r\n    const userSurveyData = {survey: surveyData, userID};\r\n    this.restDataSource.deleteSurvey(userSurveyData).subscribe(data => {\r\n      const error = data.error;\r\n\r\n      if (error) {\r\n\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'Failed to delete survey, please try again.',\r\n          icon: 'error'\r\n        });\r\n       // this.flashMessage.show('Error: failed to delete survey, please try again.', {cssClass: 'alert-danger', timeOut: 6000});\r\n      } else {\r\n        this.initializeSurveys(); // reload surveys\r\n      }\r\n    });\r\n  }\r\n\r\n  updateSurvey(surveyData: Survey, userID: string): Observable<IResponse>\r\n  {\r\n    const data = {survey: surveyData, userID};\r\n    return this.restDataSource.updateSurvey(data);\r\n  }\r\n  takeSurvey(survey: Survey): Observable<IResponse>\r\n  {\r\n    return this.restDataSource.takeSurvey(survey);\r\n  }\r\n  initializeSurveys(): void {\r\n    this.restDataSource.getSurveys().subscribe(data => {\r\n      this.surveys = data.data;\r\n    });\r\n  }\r\n\r\n  isActive(survey: Survey): boolean {\r\n\r\n    const activeDate = new Date(survey.dateActive).getTime();\r\n    const expireDate = new Date(survey.dateExpire).getTime();\r\n\r\n    if (activeDate <= Date.now() &&  Date.now() <= expireDate)\r\n    {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { DisplayResultsComponent } from './survey-library/display-results/display-results.component';\r\nimport { EditSurveyComponent } from './survey-library/edit-survey/edit-survey.component';\r\nimport { SurveyManagementComponent } from './survey-library/survey-management/survey-management.component';\r\nimport { TakeSurveyComponent } from './survey-library/take-survey/take-survey.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { ErrorComponent } from './pages/error/error.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'home', component: HomeComponent, data: {title: '3C Surveys'}},\r\n  {path: 'login', data: {title: 'Login'}, redirectTo: '/admin/login', pathMatch: 'full'},\r\n  {path: 'register', data: {title: 'Register'}, redirectTo: '/admin/register', pathMatch: 'full'},\r\n  {path: 'update', data: {title: 'Upadate User Info'}, redirectTo: '/admin/update', pathMatch: 'full'},\r\n\r\n  {path: 'surveys/take/:id', component: TakeSurveyComponent, data: {title: 'Take Survey'}},\r\n  {path: 'surveys', component: SurveyManagementComponent, data: {title: 'Survey Management'}, canActivate: [AuthGuard]},\r\n  {path: 'surveys/edit/:id', component: EditSurveyComponent, data: {title: 'Edit Survey'}, canActivate: [AuthGuard]},\r\n  {path: 'surveys/results/:id', component: DisplayResultsComponent, data: {title: 'Results'}, canActivate: [AuthGuard]},\r\n  {path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)},\r\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\r\n  {path: 'error', component: ErrorComponent, data: {title: 'Error'}},\r\n  {path: '**', redirectTo: '/error', pathMatch: 'full'},\r\n  // {path: '**', component: ErrorComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <ul>\r\n      <li class=\"errorText\">\r\n          <h1 class=\"\">OOPS!</h1>\r\n          <h3 class=\"\">PAGE NOT FOUND</h3>\r\n      </li>\r\n\r\n      <li class=\"errorImg\">\r\n        <img src=\"../../../assets/images/errorPage.png\" class=\"img\" alt=\"errorPageImage\">\r\n      </li>\r\n  </ul>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}